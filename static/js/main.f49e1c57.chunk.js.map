{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","className","id","value","onChange","e","target","source","renderers","code","Component","language","style","dark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAUe,SAASA,IACtB,IAD6B,EAmCHC,mBAlCR,ufADW,mBAmCtBC,EAnCsB,KAmCfC,EAnCe,KAqC7B,OACE,sBAAKC,UAAU,MAAf,UACI,oBAAIC,GAAG,gBAAP,8BACA,sBAAKD,UAAU,SAAf,UACI,mBAAGC,GAAG,WAAN,uBACA,0BAAUA,GAAG,SAASC,MAAOJ,EAAOK,SAClC,SAAAC,GAAC,OAAKL,EAASK,EAAEC,OAAOH,aAG9B,sBAAKF,UAAU,UAAf,UACI,mBAAGC,GAAG,OAAN,qBACA,qBAAKA,GAAG,UAAR,SACI,cAAC,IAAD,CAAeK,OAAQR,EAAOS,UAAc,CAAEC,KAAKC,aASnE,IAAMA,EAAY,SAAC,GAAsB,IAArBP,EAAoB,EAApBA,MAAMQ,EAAc,EAAdA,SAExB,OACE,cAAC,IAAD,CAAmBA,SAAQ,OAAEA,QAAF,IAAEA,IAAY,KAAMC,MAAOC,IAAtD,gBACGV,QADH,IACGA,IAAS,MC5DDW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f49e1c57.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport \"./App.scss\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\n\n\n\nexport default function App () {\n  const defaultInput = `\n  # Hello World\n\n  ## Hello World\n  \n  \\`<div></div>\\`\n  \n  \\`\\`\\`\n  \n  function helloWorld(hello, world) {\n    if (hello == '\\`\\`\\`' && world == '\\`\\`\\`') {\n      return HelloWorld;\n    }\n  }\n  \\`\\`\\`\n  \n **bold**\n  [CodingIsFun](https://www.freecodecamp.com), \n  > FreeCodeCamp!\n  \n  - Coding\n    - Is\n       - Fun\n          - FreeCodeCamp.com\n  \n  \n  1. First\n  1. Second\n  1. Third\n  \n  ![FreeCodeCamp Logo w/ Text](https://popsql.com/static/external-logos/freecodecamp.png)\n  `;\n\n\n  const [input, setInput] = useState(defaultInput);\n\n  return (\n    <div className=\"App\">\n        <h1 id=\"markdown-prev\">Markdown Preview</h1>\n        <div className=\"editor\">\n            <p id=\"typehere\">Type Here</p>\n            <textarea id=\"editor\" value={input} onChange={\n              e =>  setInput(e.target.value)\n            }/>\n        </div>\n        <div className=\"preview\">\n            <p id=\"prev\">Preview</p>\n            <div id=\"preview\" >\n                <ReactMarkdown source={input} renderers =  {{ code:Component }}   />\n          </div>\n        </div>\n      </div>\n  );\n}\n\n\n\nconst Component = ({value,language}) => {\n  \n  return (\n    <SyntaxHighlighter language={language ?? null} style={dark}>\n      {value ?? ''}\n    </SyntaxHighlighter>\n  );\n};\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}